var idbLocalStorage=function(e){"use strict";return e.Store=class{constructor(e="graphqlstore",t="keyval"){this.storeName=t,this._dbp=new Promise((r,o)=>{const s=indexedDB.open(e,1);s.onerror=(()=>o(s.error)),s.onsuccess=(()=>r(s.result)),s.onupgradeneeded=(()=>{s.result.createObjectStore(t)})})}_withIDBStore(e,t){return this._dbp.then(r=>new Promise((o,s)=>{const n=r.transaction(this.storeName,e);n.oncomplete=(()=>o()),n.onabort=n.onerror=(()=>s(n.error)),t(n.objectStore(this.storeName))}))}getItem(e){let t;return this._withIDBStore("readonly",r=>{t=r.get(e)}).then(()=>t.result)}setItem(e,t){return this._withIDBStore("readwrite",r=>{r.put(t,e)})}removeItem(e){return this._withIDBStore("readwrite",t=>{t.delete(e)})}clear(){return this._withIDBStore("readwrite",e=>{e.clear()})}keys(){const e=[];return this._withIDBStore("readonly",t=>{(t.openKeyCursor||t.openCursor).call(t).onsuccess=function(){this.result&&(e.push(this.result.key),this.result.continue())}}).then(()=>e)}},e}({});