"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var lodash_find_1 = __importDefault(require("lodash.find"));
var loglevel_1 = __importDefault(require("loglevel"));
/**
 * Abstraction for AeroGear configuration
 */
var ConfigurationService = /** @class */ (function () {
    /**
    * @param config configuration that should be injected to all available SDK's
    */
    function ConfigurationService(config) {
        this.configurations = config.services;
    }
    /**
    * Get a service configuration object, provided an existing type is given
    * @param type - The type of the service
    */
    ConfigurationService.prototype.getConfigByType = function (type) {
        if (this.configurations) {
            return this.configurations.filter(function (service) { return service.type && service.type.toLowerCase() === type.toLowerCase(); });
        }
    };
    /**
     * Get a service configuration object, provided an existing id is given
     * @param id - unique id of the service
     */
    ConfigurationService.prototype.getConfigById = function (id) {
        if (this.configurations) {
            return lodash_find_1.default(this.configurations, function (service) {
                return !!service.id && service.id.toLowerCase() === id.toLowerCase();
            });
        }
        loglevel_1.default.error("Configuration not initialized.");
    };
    return ConfigurationService;
}());
exports.ConfigurationService = ConfigurationService;
//# sourceMappingURL=ConfigurationService.js.map