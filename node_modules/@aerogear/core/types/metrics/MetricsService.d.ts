import { ServiceConfiguration } from "../config";
import { Metrics, MetricsBuilder } from "./model";
import { MetricsPublisher } from "./publisher";
/**
 * AeroGear Metrics SDK
 * Provides internal api for metrics that are sent to metrics server.
 */
export declare class MetricsService {
    static readonly CLIENT_ID_KEY = "aerogear_metrics_client_key";
    static readonly DEFAULT_METRICS_TYPE = "init";
    static readonly TYPE = "metrics";
    protected builder: MetricsBuilder;
    protected publisher?: MetricsPublisher;
    protected configuration?: ServiceConfiguration;
    private readonly defaultMetrics?;
    constructor(options: {
        configuration: any;
        builder?: MetricsBuilder;
        publisher?: MetricsPublisher;
    });
    metricsPublisher: MetricsPublisher | undefined;
    metricsBuilder: MetricsBuilder;
    /**
     * Publish metrics using predefined publisher
     *
     * @param type type of the metrics to be published
     * @param metrics metrics instances that should be published
     */
    publish(type: string, metrics: Metrics[]): Promise<any>;
    /**
     * Collect metrics for all active metrics collectors
     * Send data using metrics publisher
     */
    sendAppAndDeviceMetrics(): Promise<any>;
}
