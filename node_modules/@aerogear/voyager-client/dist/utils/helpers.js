"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_utilities_1 = require("apollo-utilities");
var Constants_1 = require("../config/Constants");
var apollo_utilities_2 = require("apollo-utilities");
exports.isSubscription = function (op) {
    var _a = apollo_utilities_1.getMainDefinition(op.query), kind = _a.kind, operation = _a.operation;
    return kind === "OperationDefinition" && operation === "subscription";
};
exports.isMutation = function (op) {
    var _a = apollo_utilities_1.getMainDefinition(op.query), kind = _a.kind, operation = _a.operation;
    return kind === "OperationDefinition" && operation === "mutation";
};
exports.isOnlineOnly = function (op) {
    return apollo_utilities_1.hasDirectives([Constants_1.localDirectives.ONLINE_ONLY], op.query);
};
exports.isNetworkError = function (error) {
    return !error.result;
};
exports.getMutationName = function (mutation) {
    var definition = mutation.definitions.find(function (def) { return def.kind === "OperationDefinition"; });
    var operationDefinition = definition && definition;
    return operationDefinition && operationDefinition.name && operationDefinition.name.value;
};
exports.getOperationFieldName = function (operation) { return apollo_utilities_2.resultKeyNameFromField(operation.definitions[0].selectionSet.selections[0]); };
// this function takes a Query and returns its constituent parts, if available.
exports.deconstructQuery = function (updateQuery) {
    var query;
    var variables;
    if (isQueryWithVariables(updateQuery)) {
        query = updateQuery.query;
        variables = updateQuery.variables;
    }
    else {
        query = updateQuery;
    }
    return { query: query, variables: variables };
};
var isQueryWithVariables = function (doc) {
    if (doc.variables) {
        return true;
    }
    else {
        return false;
    }
};
//# sourceMappingURL=helpers.js.map