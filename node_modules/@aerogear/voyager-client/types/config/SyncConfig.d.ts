import { ConfigurationService } from "@aerogear/core";
import { PersistedData, PersistentStore } from "../offline/storage/PersistentStore";
import { DataSyncConfig } from "./DataSyncConfig";
import { NetworkStatus, OfflineQueueListener } from "../offline";
import { VersionedState } from "../conflicts/VersionedState";
import { ConflictResolutionStrategies } from "../conflicts";
import { AuthContextProvider } from ".";
/**
 * Class for managing user and default configuration.
 * Default config is applied on top of user provided configuration
 */
export declare class SyncConfig implements DataSyncConfig {
    wsUrl?: string;
    httpUrl?: string;
    offlineQueueListener?: OfflineQueueListener;
    authContextProvider?: AuthContextProvider;
    fileUpload?: boolean;
    openShiftConfig?: ConfigurationService;
    auditLogging: boolean;
    conflictStrategy: ConflictResolutionStrategies;
    conflictStateProvider: VersionedState;
    networkStatus: NetworkStatus;
    cacheStorage: PersistentStore<PersistedData>;
    offlineStorage: PersistentStore<PersistedData>;
    retryOptions: {
        delay: {
            initial: number;
            max: number;
            jitter: boolean;
        };
        attempts: {
            max: number;
        };
    };
    constructor(clientOptions?: DataSyncConfig);
    private init;
    /**
    * Platform configuration that is generated and supplied by OpenShift
    *
    * @param config user supplied configuration
    */
    private applyPlatformConfig;
    private validate;
}
